name: Encrypt 77 JSON 

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install dependencies
      run: |
        echo '{}' > package.json
        npm install

    - name: Create encryption script
      run: |
        cat << 'EOF' > encrypt.js
        const fs = require('fs');
        const shift = parseInt(process.env.CAESAR_SHIFT, 10);

        const caesarShift = (text, shiftAmount) => {
          return text.split('').map(char => {
            let code = char.charCodeAt(0);

            if (code >= 65 && code <= 90) {
              // Uppercase letters
              code = ((code - 65 + shiftAmount) % 26 + 26) % 26 + 65;
            } else if (code >= 97 && code <= 122) {
              // Lowercase letters
              code = ((code - 97 + shiftAmount) % 26 + 26) % 26 + 97;
            }

            return String.fromCharCode(code);
          }).join('');
        };

        const encryptObject = obj => {
          for (const key in obj) {
            if (typeof obj[key] === 'string') {
              obj[key] = caesarShift(obj[key], shift);
            } else if (typeof obj[key] === 'object' && obj[key] !== null) {
              encryptObject(obj[key]);
            }
          }
        };

        try {
          const data = JSON.parse(fs.readFileSync('77-permissions.json', 'utf8'));
          encryptObject(data);
          fs.mkdirSync('docs', { recursive: true });
          fs.writeFileSync('docs/encrypted-77.json', JSON.stringify(data, null, 2));
        } catch (error) {
          console.error("Error reading or parsing the JSON file:", error);
          process.exit(1);
        }
        EOF
      env:
        CAESAR_SHIFT: ${{ secrets.CAESAR_SHIFT }}

    - name: Run encryption script
      run: node encrypt.js
      env:
        CAESAR_SHIFT: ${{ secrets.CAESAR_SHIFT }}

    - name: Commit and push changes
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add docs/encrypted-77.json
        git commit -m 'Update encrypted JSON'
        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Deploy to GitHub Pages
      if: success()  # Only run if the previous steps were successful
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs
